document
    prefix neurolex <http://neurolex.org/wiki/Main_Page/>
    prefix spm <http://www.fil.ion.ucl.ac.uk/spm/>
    prefix nidm <http://nidm.nidash.org/>
    
    entity(statistical_map,
        [prov:type = "spm:spm",
        prov:location = "{SPM:SPM}" %% xsd:anyURI,
        spm:statisticType = "{SPM:STAT}" %% xsd:string,
        spm:degreesOfFreedom = "{SPM:DF}",
        spm:numberOfDimensions = "{SPM:NDIMS}" %% xsd:int,
        spm:dimensions = "{SPM:DIM}",
        spm:dimensionsUnits = "{SPM:DIM_UNITS}",
        spm:coordinateSpace = "{SPM:SPACE}" %% xsd:string,
        ndim:voxelSize = "{SPM:VOXEL_SIZE}"])

    entity(contrast_map,
        [prov:type = "spm:contrastMap",
        prov:location = "{SPM:CONTRAST_MAP}" %% xsd:anyURI,
        spm:label = "{SPM:CONTRAST_NAME}" %% xsd:string,
        spm:numberOfDimensions = "{SPM:NDIMS}" %% xsd:int,
        spm:dimensions = "{SPM:DIM}",
        spm:dimensionsUnits = "{SPM:DIM_UNITS}",
        spm:coordinateSpace = "{SPM:SPACE}" %% xsd:string,
        spm:contrastVector = "{SPM:CONTRAST_VECTOR}",
        spm:designMatrix = "{SPM:DESIGN_MATRIX}",
        ndim:voxelSize = "{SPM:VOXEL_SIZE}"])
    used(statistical_map,contrast_map, -)

    entity(search_space,
        [prov:type = "spm:mask",
        spm:value = "{SPM:MASK}" %% xsd:anyURI,
        spm:numberOfDimensions = "{SPM:NDIMS}" %% xsd:int,
        spm:dimensions = "{SPM:DIM}",
        spm:dimensionsUnits = "{SPM:DIM_UNITS}",
        spm:coordinateSpace = "{SPM:SPACE}" %% xsd:string,
        ndim:voxelSize = "{SPM:VOXEL_SIZE}",
        spm:searchVolumeInVoxels = "{SPM:NVOXELS}" %% xsd:int,
        spm:searchVolumeInProductOfUnits = "{SPM:NPRODUNITS}" %% xsd:float,
        spm:searchVolumeInResels = "{SPM:NRESELS}" %% xsd:float,        
        spm:searchVolumeReselsDescriptor = "{SPM:RESELS}",
        spm:noiseFWHMInVoxels = "{SPM:FWHMvoxel}",
        spm:noiseFWHMInUnits = "{SPM:FWHMunits}"])

    entity(height_threshold,
        [prov:type = "spm:heightThreshold",
        spm:label = "{HEIGHT_THRESHOLD:TEXT}" %%xsd:string,
        spm:userSpecifiedThresholdType = "{HEIGHT_THRESHOLD:TYPE}",
        spm:value = "{HEIGHT_THRESHOLD:VALUE}" %% xsd:float,
        spm:p = "{HEIGHT_THRESHOLD:P_VALUE}" %% xsd:float,
        spm:pFWER = "{HEIGHT_THRESHOLD:pFWER}" %% xsd:float])

    entity(extent_threshold,
        [prov:type = "spm:extentThreshold",
        spm:clusterSizeInVoxels = "{EXTENT_THRESHOLD:VALUE}" %% xsd:float,
        spm:clusterSizeInResels = "{EXTENT_THRESHOLD:VALUEINRESELS}" %% xsd:float,
        spm:p = "{EXTENT_THRESHOLD:P_VALUE}" %% xsd:float,
        spm:pFWER = "{EXTENT_THRESHOLD:pFWER}" %% xsd:float])

    activity(inference,
        [prov:type = "spm:inference"])
    used(inference, statistical_map, -)
    used(inference, search_space, -)
    used(inference, height_threshold, -)
    used(inference, extent_threshold, -)

    agent(software,
        [prov:type = "spm:software",
        spm:value = "{SPM:SOFTWARE_NAME}" %% xsd:string,
        spm:version = "{SPM:SOFTWARE_VERSION}" %% xsd:string,
        spm:revision = "{SPM:SOFTWARE_REVISION}" %% xsd:string])
    wasAttributedTo(software, inference)

    entity(stat_image_properties,
        [prov:type = "spm:statisticImageProperties",
        spm:expectedNumberOfVoxelsPerCluster = "{SPM:Ek}" %% xsd:float,
        spm:expectedNumberOfClusters = "{SPM:Ec}" %% xsd:float,
        spm:heightCriticalThresholdFWE05 = "{SPM:HCRITFWE05}" %% xsd:float,
        spm:heightCriticalThresholdFDR05 = "{SPM:HCRITFDR05}" %% xsd:float,
        spm:smallestSignifClusterSizeInVoxelsFWE05 = "{SPM:ECRITFWE05}" %% xsd:float,
        spm:smallestSignifClusterSizeInVoxelsFDR05 = "{SPM:ECRITFDR05}" %% xsd:float])
    wasGeneratedBy(stat_image_properties, inference, -)

    entity(excursion_set,
        [prov:type = "spm:excursionSet",
        spm:value = "{SPM:SPMTHRESH}" %% xsd:anyURI,
        spm:mip = "{SPM:SPMMIP}" %% xsd:anyURI,
        spm:underlayFile = "{SPM:SPMUNDERLAYFILE}" %% xsd:anyURI,
        spm:numberOfDimensions = "{SPM:NDIMS}" %% xsd:int,
        spm:dimensions = "{SPM:DIM}",
        spm:dimensionsUnits = "{SPM:DIM_UNITS}",
        spm:coordinateSpace = "{SPM:SPACE}" %% xsd:string,
        ndim:voxelSize = "{SPM:VOXEL_SIZE}"])
    wasGeneratedBy(excursion_set, inference, -)

    entity(set_level,
        [prov:type = "prov:Collection"])
    hadMember(set_level, excursion_set)

    entity(cluster_level,
        [prov:type = "prov:Collection"])
    hadMember(cluster_level, excursion_set)

    entity(peak_level,
        [prov:type = "prov:Collection"])
    hadMember(peak_level, excursion_set)

    entity(set,
        [prov:type = "spm:setLevelStatistic",
        spm:value = "{SET:CARDINALITY}" %% xsd:float,
        spm:p = "{SET:P_VALUE}" %% xsd:float])
    hadMember(set, set_level)

    <!-- BEGIN cluster -->
    
    entity(cluster_{CLUSTER:INDEX},
        [prov:type = "spm:clusterLevelStatistic",
        spm:clusterSizeInVoxels = "{CLUSTER:SIZE}" %% xsd:int,
        spm:clusterSizeInResels = "{CLUSTER:SIZEINRESELS}" %% xsd:float,
        spm:unit = "{CLUSTER:UNIT}" %% xsd:string,
        spm:p = "{CLUSTER:P_VALUE}" %% xsd:float,
        spm:pFWER = "{CLUSTER:pFWER}" %% xsd:float,
        spm:qFDR = "{CLUSTER:pFDR}" %% xsd:float])
    hadMember(cluster_{CLUSTER:INDEX}, cluster_level)
    hadMember(cluster_{CLUSTER:INDEX}, set)

    <!-- END cluster -->

    <!-- BEGIN peak -->

    entity(peak_{PEAK:INDEX},
        [prov:type = "spm:peakLevelStatistic",
        neurolex:x_coord = "{PEAK:X}" %% xsd:float,
        neurolex:y_coord = "{PEAK:Y}" %% xsd:float,
        neurolex:z_coord = "{PEAK:Z}" %% xsd:float,
        spm:{SPM:STAT}-statistic = "{PEAK:VALUE}" %% xsd:float,
        spm:equiv_Z-statistic = "{PEAK:ZSCORE}" %% xsd:float,
        spm:p = "{PEAK:P_VALUE}" %% xsd:float,
        spm:pFWER = "{PEAK:pFWER}" %% xsd:float,
        spm:qFDR = "{PEAK:pFDR}" %% xsd:float])
    hadMember(peak_{PEAK:INDEX}, peak_level)
    hadMember(peak_{PEAK:INDEX}, cluster_{CLUSTER:INDEX})

    <!-- END peak -->

endDocument
